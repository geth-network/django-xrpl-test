version: '3.8'

services:

  db:
    image: postgres:15-alpine
    hostname: xrpl-db
    container_name: xrpl-db
    restart: unless-stopped
    networks:
      - xrpl-network
    env_file:
      - .envs/prod/.postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 3

  xrpl-django:
    image: xrpl-django-service
    container_name: xrpl-django-service
    hostname: xrpl-django-service
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/prod/Dockerfile
    volumes:
      - static-data:/opt/staticfiles
    networks:
      - xrpl-network
    expose:
      - 8000
    depends_on:
      - db
      - redoc
    working_dir: /opt
    environment:
      - POSTGRES_HOST=xrpl-db
    env_file:
      - .envs/prod/.postgres
      - .envs/prod/.django
    command: gunicorn config.wsgi:application -b 0.0.0.0:8000 -w 3 --log-level debug
    healthcheck:
      test: curl -f -s http://localhost:8000/healthcheck/ || exit 1
      interval: 10s
      timeout: 5s
      retries: 3

  redoc:
    image: redocly/redoc
    container_name: xrpl-redoc
    hostname: xrpl-redoc
    environment:
      - SPEC_URL=swagger/swagger.yaml
    ports:
      - "8081:80"
    volumes:
      - ./config/schemas/api_v1.yml:/usr/share/nginx/html/swagger/swagger.yaml
    healthcheck:
      test: curl -f -s http://localhost:80 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    build: ./nginx
    hostname: xrpl-nginx
    container_name: xrpl-nginx
    working_dir: /opt
    depends_on:
      - xrpl-django
    networks:
      - xrpl-network
    volumes:
      - static-data:/opt/staticfiles
    ports:
      - "1337:80"

volumes:
  db-data:
  static-data:

networks:
  xrpl-network:
    name: xrpl-network